---
title: Using Appdynamics
owner: Partners
---

This topic describes how to push and bind an application to an AppDynamics tile.

## <a id='before-you-start'></a>Before You Start
1. Create a [Pivotal Network](https://network.pivotal.io) account if you do not have one.

1. Install the cf command line interface. Go to the [Pivotal documentation](https://docs.pivotal.io) and search for "install cf cli".


## <a id='log-in-to-pivotal-cli'></a>Log in to the Pivotal CLI
1. Open a CLI or command-prompt window.

1. Identify your Pivotal API endpoint and version. Enter the following command:

          cf api
   You should see output such as:

          api endpoint: https://api.my.pivotal.io

          api version: 2.103.0

1. Log in to the Pivotal endpoint:

          cf login

1. Enter your email address and Pivotal password when prompted.


##<a id='push-the-application'></a> Push the Application
1. __cd__ to the root directory of the application you want to deploy.

1. Push the application and the [corresponding buildpack](using.html#buildpack-info):

          cf push <app-name> -b <url-to-appdynamics-buildpack>

## <a id='bind-the-service-plan-to-the-application'></a>Bind the Service Plan to the Application

1. Log in to the Pivotal Apps Manager.

1. Click __Marketplace__ (left menu) and click __AppDynamics__ (under Services).

1. Under Service Plans, select the service plan that you set up in the Ops Manager. Then click __Select This Plan__. ![](./images/appdash-01-select-plan.png)

1. Under Instance Configuration, specify the instance name and select the application of interest under Bind to App. Then click __Create__. ![](./images/appdash-02-bind-to-app.png)

The Service tab confirms that the service is successfully bound to the application.

![](./images/appdash-04-bind-success.png)

## <a id='restage-the-application'></a>Restage the Application

1. Enter the following:

         cf bind-service <application-name>

1. Check the resulting output and verify that the app is successfully deployed. The last lines should confirm that the state of the app is running.

              state     since                  cpu    memory        disk           details
         #0   running   2018-02-15T02:06:03Z   0.0%   55.3M of 1G   341.7M of 1G


## <a id='setting-proxy-properties'></a>Setting Proxy Properties

If you are using a Proxy Server, the consumer application should specify the http_proxy or https_proxy as an environment variable for the application running on PCF to communicate with the proxy server. Do the following:

1. Set the environment variable for the application and the Controller.

   1. For an HTTP proxy:

            cf set-env <app-name> http_proxy http://user@password:myproxy....:8080/

   1. For an HTTPS proxy:

            cf set-env <app-name> https_proxy https://user@password:myproxy....:8080/

1. Restage the application:

            cf restage <app-name>

1. Log in to the Controller web UI, navigate to the Metric Browser, and verify that the application is getting detected and monitored.

## <a id='buildpack-info'></a>Supported Buildpacks and Sample Workflows

The following buildpacks are supported in this release. The [AppDynamics documentation for Pivotal] (https://docs.appdynamics.com/display/PCF) includes several step-by-step example workflows with sample applications.

|  Language | Buildpack  | Sample Workflow |
|---|---|---|
| Java  |  https://github.com/cloudfoundry/java-buildpack | [Java Application Workflow](https://docs.appdynamics.com/display/PCF/Java+Application+in+PCF+-+Monitoring+Workflow) |
| PHP  | https://github.com/cloudfoundry/php-buildpack  | [PHP Application workflow](https://docs.appdynamics.com/display/PCF/PHP+Application+in+PCF+-+Monitoring+Workflow) |
|  Python |  https://github.com/Appdynamics/python-buildpack | [Python Application Workflow] (https://docs.appdynamics.com/display/PCF/Python+Application+in+PCF+-+Monitoring+Workflow) |
|  NodeJS |  https://github.com/Appdynamics/nodejs-buildpack | [NodeJS Application Workflow] (https://docs.appdynamics.com/display/PCF/Python+Application+in+PCF+-+Monitoring+Workflow) |
